class Solution {
    public int[][] sortMatrix(int[][] grid) {
         int n = grid.length;

        Map<Integer, PriorityQueue<Integer>> diagMap = new HashMap<>();

        
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                int key = i - j;

              
                if (!diagMap.containsKey(key)) {
                    if (i >= j) {
                       
                        diagMap.put(key, new PriorityQueue<>((a, b) -> b - a));
                    } else {
                        
                        diagMap.put(key, new PriorityQueue<>());
                    }
                }

                diagMap.get(key).offer(grid[i][j]);
            }
        }

        
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                int key = i - j;
                grid[i][j] = diagMap.get(key).poll();
            }
        }

        return grid;
    }
}
