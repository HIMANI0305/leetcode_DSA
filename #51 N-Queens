class Solution {
     List<List<String>> res=new ArrayList<>();
    public List<List<String>> solveNQueens(int n) {
         backtrack(new int[n],0,n); return res;
    }
    void backtrack(int[] queens,int row,int n){
        if(row==n){
            List<String> board=new ArrayList<>();
            for(int i=0;i<n;i++){
                char[] r=new char[n]; Arrays.fill(r,'.');
                r[queens[i]]='Q'; board.add(new String(r));
            }
            res.add(board); return;
        }
        for(int col=0;col<n;col++){
            if(valid(queens,row,col)){
                queens[row]=col;
                backtrack(queens,row+1,n);
            }
        }
    }
    boolean valid(int[] q,int r,int c){
        for(int i=0;i<r;i++)
            if(q[i]==c || Math.abs(q[i]-c)==r-i) return false;
        return true;
    }
}
