class Solution {
    public double maxAverageRatio(int[][] classes, int extraStudents) {
        
        PriorityQueue<double[]> pq = new PriorityQueue<>((a, b) -> Double.compare(b[0], a[0]));
        
        for (int[] c : classes) {
            int pass = c[0], total = c[1];
            double gain = gain(pass, total);
            pq.add(new double[]{gain, pass, total});
        }
        
        while (extraStudents-- > 0) {
            double[] top = pq.poll();
            int pass = (int) top[1];
            int total = (int) top[2];
            
            pass++;
            total++;
            
            double newGain = gain(pass, total);
            pq.add(new double[]{newGain, pass, total});
        }
        
        double sum = 0.0;
        for (double[] c : pq) {
            sum += (c[1] / c[2]); // pass / total
        }
        
        return sum / classes.length;
    }
    
    private double gain(int p, int t) {
        return ((double)(p + 1) / (t + 1)) - ((double)p / t);
    }
}
